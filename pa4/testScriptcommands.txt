 Test 2
 
 docker run -d -p 8087:8080 --net=mynet -e K=2 --ip=10.0.0.7 -e VIEW="10.0.0.7:8080,10.0.0.8:8080,10.0.0.9:8080,10.0.0.10:8080" -e ip_port="10.0.0.7:8080" hw4
 
 docker run -d -p 8088:8080 --net=mynet -e K=2 --ip=10.0.0.8 -e VIEW="10.0.0.7:8080,10.0.0.8:8080,10.0.0.9:8080,10.0.0.10:8080" -e ip_port="10.0.0.8:8080" hw4
 
 docker run -d -p 8089:8080 --net=mynet -e K=2 --ip=10.0.0.9 -e VIEW="10.0.0.7:8080,10.0.0.8:8080,10.0.0.9:8080,10.0.0.10:8080" -e ip_port="10.0.0.9:8080" hw4
 
 docker run -d -p 8090:8080 --net=mynet -e K=2 --ip=10.0.0.10 -e VIEW="10.0.0.7:8080,10.0.0.8:8080,10.0.0.9:8080,10.0.0.10:8080" -e ip_port="10.0.0.10:8080" hw4
 
 docker run -d -p 8091:8080 --net=mynet -e K=2 --ip=10.0.0.11 -e ip_port="10.0.0.11:8080" hw4
 
 docker run -d -p 8092:8080 --net=mynet -e K=2 --ip=10.0.0.12 -e ip_port="10.0.0.12:8080" hw4
 
 docker run -d -p 8093:8080 --net=mynet -e K=2 --ip=10.0.0.13 -e ip_port="10.0.0.13:8080" hw4
 
 curl -X PUT -d type=add -d ip_port=10.0.0.11:8080 192.168.99.100:8080/kvs/view_update
 
Test 3

docker run -d -p 8094:8080 --net=mynet -e K=2 --ip=10.0.0.14 -e VIEW="10.0.0.14:8080,10.0.0.15:8080" -e ip_port="10.0.0.14:8080" hw4

docker run -d -p 8095:8080 --net=mynet -e K=2 --ip=10.0.0.15 -e VIEW="10.0.0.14:8080,10.0.0.15:8080" -e ip_port="10.0.0.15:8080" hw4 
 
curl -X PUT -d key=doggo -d value=pupper 192.168.99.100:8094/kvs

curl -X GET -d key=doggo 192.168.99.100:8095/kvs

docker network mynet disconnect 

curl -X PUT -d key=doggo -d value=pupperino 192.168.99.100:8095/kvs
 
 Test 4
 
docker run -d -p 8096:8080 --net=mynet -e K=2 --ip=10.0.0.16 -e VIEW="10.0.0.16:8080,10.0.0.17:8080,10.0.0.18:8080,10.0.0.19:8080" -e ip_port="10.0.0.16:8080" hw4

docker run -d -p 8097:8080 --net=mynet -e K=2 --ip=10.0.0.17 -e VIEW="10.0.0.16:8080,10.0.0.17:8080,10.0.0.18:8080,10.0.0.19:8080" -e ip_port="10.0.0.17:8080" hw4 

docker run -d -p 8098:8080 --net=mynet -e K=2 --ip=10.0.0.18 -e VIEW="10.0.0.16:8080,10.0.0.17:8080,10.0.0.18:8080,10.0.0.19:8080" -e ip_port="10.0.0.18:8080" hw4

docker run -d -p 8099:8080 --net=mynet -e K=2 --ip=10.0.0.19 -e VIEW="10.0.0.16:8080,10.0.0.17:8080,10.0.0.18:8080,10.0.0.19:8080" -e ip_port="10.0.0.19:8080" hw4

curl -X PUT -d key=add -d value=bob 192.168.99.100:8096/kvs

curl -X GET -d key=add 192.168.99.100:8086/kvs

docker network disconnect mynet

docker network connect mynet --ip=10.0.0.17

curl -X GET -d key=add 192.168.99.100:8080/kvs

Test 7

docker run -d -p 8083:8080 --net=mynet -e K=2 --ip=10.0.0.3 -e VIEW="10.0.0.3:8080,10.0.0.4:8080,10.0.0.5:8080,10.0.0.6:8080" -e ip_port="10.0.0.3:8080" hw4

docker run -d -p 8084:8080 --net=mynet -e K=2 --ip=10.0.0.4 -e VIEW="10.0.0.3:8080,10.0.0.4:8080,10.0.0.5:8080,10.0.0.6:8080" -e ip_port="10.0.0.4:8080" hw4

docker run -d -p 8085:8080 --net=mynet -e K=2 --ip=10.0.0.5 -e VIEW="10.0.0.3:8080,10.0.0.4:8080,10.0.0.5:8080,10.0.0.6:8080" -e ip_port="10.0.0.5:8080" hw4

docker run -d -p 8086:8080 --net=mynet -e K=2 --ip=10.0.0.6 -e VIEW="10.0.0.3:8080,10.0.0.4:8080,10.0.0.5:8080,10.0.0.6:8080" -e ip_port="10.0.0.6:8080" hw4

docker run -d -p 8087:8080 --net=mynet -e K=2 --ip=10.0.0.7 -e ip_port="10.0.0.7:8080" hw4

docker run -d -p 8088:8080 --net=mynet -e K=2 --ip=10.0.0.8 -e ip_port="10.0.0.8:8080" hw4

http://192.168.99.100:8083/kvs/view_update?type=add&ip_port=10.0.0.7:8080

http://192.168.99.100:8085/kvs/view_update?type=add&ip_port=10.0.0.8:8080